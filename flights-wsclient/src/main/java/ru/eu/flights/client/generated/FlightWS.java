
package ru.eu.flights.client.generated;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import java.util.List;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "FlightWS", targetNamespace = "http://flights.eu.ru/ws")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface FlightWS {


    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<ru.eu.flights.client.generated.Flight>
     * @throws InvalidArgumentMN
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchFlights", targetNamespace = "http://flights.eu.ru/ws", className = "ru.eu.flights.client.generated.SearchFlights")
    @ResponseWrapper(localName = "searchFlightsResponse", targetNamespace = "http://flights.eu.ru/ws", className = "ru.eu.flights.client.generated.SearchFlightsResponse")
    @Action(input = "http://flights.eu.ru/ws/FlightWS/searchFlightsRequest", output = "http://flights.eu.ru/ws/FlightWS/searchFlightsResponse", fault = {
        @FaultAction(className = InvalidArgumentMN.class, value = "http://flights.eu.ru/ws/FlightWS/searchFlights/Fault/ArgumentException")
    })
    public List<Flight> searchFlights(
            @WebParam(name = "arg0", targetNamespace = "")
            Long arg0,
            @WebParam(name = "arg1", targetNamespace = "")
            City arg1,
            @WebParam(name = "arg2", targetNamespace = "")
            City arg2,
            @WebParam(name = "arg3", targetNamespace = "")
            Integer arg3)
        throws InvalidArgumentMN
    ;

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws InvalidArgumentMN
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buyTicket", targetNamespace = "http://flights.eu.ru/ws", className = "ru.eu.flights.client.generated.BuyTicket")
    @ResponseWrapper(localName = "buyTicketResponse", targetNamespace = "http://flights.eu.ru/ws", className = "ru.eu.flights.client.generated.BuyTicketResponse")
    @Action(input = "http://flights.eu.ru/ws/FlightWS/buyTicketRequest", output = "http://flights.eu.ru/ws/FlightWS/buyTicketResponse", fault = {
        @FaultAction(className = InvalidArgumentMN.class, value = "http://flights.eu.ru/ws/FlightWS/buyTicket/Fault/ArgumentException")
    })
    public boolean buyTicket(
            @WebParam(name = "arg0", targetNamespace = "")
            Passenger arg0,
            @WebParam(name = "arg1", targetNamespace = "")
            Flight arg1,
            @WebParam(name = "arg2", targetNamespace = "")
            Place arg2,
            @WebParam(name = "arg3", targetNamespace = "")
            String arg3)
        throws InvalidArgumentMN
    ;

    /**
     * 
     * @return
     *     returns java.util.List<ru.eu.flights.client.generated.City>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllCities", targetNamespace = "http://flights.eu.ru/ws", className = "ru.eu.flights.client.generated.GetAllCities")
    @ResponseWrapper(localName = "getAllCitiesResponse", targetNamespace = "http://flights.eu.ru/ws", className = "ru.eu.flights.client.generated.GetAllCitiesResponse")
    @Action(input = "http://flights.eu.ru/ws/FlightWS/getAllCitiesRequest", output = "http://flights.eu.ru/ws/FlightWS/getAllCitiesResponse")
    public List<City> getAllCities();

    /**
     * 
     * @param arg0
     * @return
     *     returns ru.eu.flights.client.generated.Reservation
     * @throws InvalidArgumentMN
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkReservationByCode", targetNamespace = "http://flights.eu.ru/ws", className = "ru.eu.flights.client.generated.CheckReservationByCode")
    @ResponseWrapper(localName = "checkReservationByCodeResponse", targetNamespace = "http://flights.eu.ru/ws", className = "ru.eu.flights.client.generated.CheckReservationByCodeResponse")
    @Action(input = "http://flights.eu.ru/ws/FlightWS/checkReservationByCodeRequest", output = "http://flights.eu.ru/ws/FlightWS/checkReservationByCodeResponse", fault = {
        @FaultAction(className = InvalidArgumentMN.class, value = "http://flights.eu.ru/ws/FlightWS/checkReservationByCode/Fault/ArgumentException")
    })
    public Reservation checkReservationByCode(
            @WebParam(name = "arg0", targetNamespace = "")
            String arg0)
        throws InvalidArgumentMN
    ;

}
